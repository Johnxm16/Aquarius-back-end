security:
  encoders:
    App\Entity\Utilisateur:
      algorithm: auto
    App\Entity\Collecteur:
      algorithm: auto


  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\Collecteur
        property: Telephone
    # used to reload user from session & other features (e.g. switch_user)
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    registration:
      pattern: ^/api/utilisateurs
      anonymous: true
      stateless: true
      methods: [POST]
    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true
      json_login:
        check_path: /api/login_check # or api_login_check as defined in config/routes.yaml
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern: ^/api
      stateless: true
      anonymous: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
    main:
      anonymous: lazy
      provider: app_user_provider

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication
      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/adresses, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/collectes, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/profiles, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/annuler_collectes, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/supprimer_comptes, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/sous_categories, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/profiles, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - {
        path: ^/api/utilisateurs,
        roles: IS_AUTHENTICATED_ANONYMOUSLY,
        methods: [GET, PUT, PATH, DELETE],
      }
    # - { path: ^/profile, roles: ROLE_USER }
